{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\webmob\\\\Documents\\\\WebMobSoft\\\\todo-suing-redux\\\\todo-using-redux\\\\src\\\\Component\\\\TodoList.js\";\nimport React from \"react\";\nimport { getTodos, getVisibleTodos } from \"../redux/seletors\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todoes,\n  dispatch\n}) => {\n  const handleToggleTodo = id => {\n    dispatch({\n      type: \"toggleTodo\",\n      payload: {\n        id\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), todoes.map(todo => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleToggleTodo(todo.id),\n        children: [todo.inputData, \"-\", todo.completed ? \"completed\" : \"Not Completed\"]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nconst mapStateToProp = state => ({\n  todoes: getVisibleTodos(state)\n});\nexport default connect(mapStateToProp)(TodoList);\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","getTodos","getVisibleTodos","connect","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","todoes","dispatch","handleToggleTodo","id","type","payload","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","onClick","inputData","completed","_c","mapStateToProp","state","$RefreshReg$"],"sources":["C:/Users/webmob/Documents/WebMobSoft/todo-suing-redux/todo-using-redux/src/Component/TodoList.js"],"sourcesContent":["import React from \"react\";\r\nimport { getTodos, getVisibleTodos } from \"../redux/seletors\";\r\nimport { connect } from \"react-redux\";\r\nconst TodoList = ({ todoes, dispatch }) => {\r\n  const handleToggleTodo = (id) => {\r\n    dispatch({ type: \"toggleTodo\", payload: { id } });\r\n  };\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      {todoes.map((todo) => (\r\n        <>\r\n          <div key={todo.id} onClick={() => handleToggleTodo(todo.id)}>\r\n            {todo.inputData}-{todo.completed ? \"completed\" : \"Not Completed\"}\r\n          </div>\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProp = (state) => ({\r\n  todoes: getVisibleTodos(state),\r\n});\r\n\r\nexport default connect(mapStateToProp)(TodoList);\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,eAAe,QAAQ,mBAAmB;AAC7D,SAASC,OAAO,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACtC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EACzC,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;IAC/BF,QAAQ,CAAC;MAAEG,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAE;QAAEF;MAAG;IAAE,CAAC,CAAC;EACnD,CAAC;EACD,oBACEP,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBV,MAAM,CAACW,GAAG,CAAEC,IAAI,iBACfhB,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACEV,OAAA;QAAmBiB,OAAO,EAAEA,CAAA,KAAMX,gBAAgB,CAACU,IAAI,CAACT,EAAE,CAAE;QAAAG,QAAA,GACzDM,IAAI,CAACE,SAAS,EAAC,GAAC,EAACF,IAAI,CAACG,SAAS,GAAG,WAAW,GAAG,eAAe;MAAA,GADxDH,IAAI,CAACT,EAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEZ;IAAC,gBACN,CACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACM,EAAA,GAhBIjB,QAAQ;AAkBd,MAAMkB,cAAc,GAAIC,KAAK,KAAM;EACjClB,MAAM,EAAEP,eAAe,CAACyB,KAAK;AAC/B,CAAC,CAAC;AAEF,eAAexB,OAAO,CAACuB,cAAc,CAAC,CAAClB,QAAQ,CAAC;AAAC,IAAAiB,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}