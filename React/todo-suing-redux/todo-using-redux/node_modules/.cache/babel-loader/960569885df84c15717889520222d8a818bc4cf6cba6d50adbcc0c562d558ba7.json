{"ast":null,"code":"// redux/reducer.js\nimport { combineReducers } from \"redux\";\nimport { ADD_TODO, TOGGLE_TODO } from './actions';\nconst initialState = {\n  byIds: {},\n  allIds: []\n};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        const {\n          id,\n          inputData\n        } = action.payload;\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [id]: {\n              inputData,\n              completed: false\n            } // Ensure each new todo has a `completed` property initialized to `false`\n          },\n          allIds: [...state.allIds, id]\n        };\n      }\n    case TOGGLE_TODO:\n      {\n        const {\n          id\n        } = action.payload;\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [id]: {\n              ...state.byIds[id],\n              completed: !state.byIds[id].completed // Toggle the `completed` property\n            }\n          }\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default taskReducer;","map":{"version":3,"names":["combineReducers","ADD_TODO","TOGGLE_TODO","initialState","byIds","allIds","taskReducer","state","action","type","id","inputData","payload","completed"],"sources":["C:/Users/webmob/Documents/WebMobSoft/todo-suing-redux/todo-using-redux/src/redux/reducer.js"],"sourcesContent":["// redux/reducer.js\r\nimport { combineReducers } from \"redux\";\r\nimport { ADD_TODO, TOGGLE_TODO } from './actions';\r\n\r\nconst initialState = {\r\n  byIds: {},\r\n  allIds: [],\r\n};\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO: {\r\n      const { id, inputData } = action.payload;\r\n      return {\r\n        ...state,\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: { inputData, completed: false }, // Ensure each new todo has a `completed` property initialized to `false`\r\n        },\r\n        allIds: [...state.allIds, id],\r\n      };\r\n    }\r\n    case TOGGLE_TODO: {\r\n      const { id } = action.payload;\r\n      return {\r\n        ...state,\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: {\r\n            ...state.byIds[id],\r\n            completed: !state.byIds[id].completed, // Toggle the `completed` property\r\n          }\r\n        }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\n"],"mappings":"AAAA;AACA,SAASA,eAAe,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,WAAW,QAAQ,WAAW;AAEjD,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC,CAAC;EACTC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGJ,YAAY,EAAEK,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKR,QAAQ;MAAE;QACb,MAAM;UAAES,EAAE;UAAEC;QAAU,CAAC,GAAGH,MAAM,CAACI,OAAO;QACxC,OAAO;UACL,GAAGL,KAAK;UACRH,KAAK,EAAE;YACL,GAAGG,KAAK,CAACH,KAAK;YACd,CAACM,EAAE,GAAG;cAAEC,SAAS;cAAEE,SAAS,EAAE;YAAM,CAAC,CAAE;UACzC,CAAC;UACDR,MAAM,EAAE,CAAC,GAAGE,KAAK,CAACF,MAAM,EAAEK,EAAE;QAC9B,CAAC;MACH;IACA,KAAKR,WAAW;MAAE;QAChB,MAAM;UAAEQ;QAAG,CAAC,GAAGF,MAAM,CAACI,OAAO;QAC7B,OAAO;UACL,GAAGL,KAAK;UACRH,KAAK,EAAE;YACL,GAAGG,KAAK,CAACH,KAAK;YACd,CAACM,EAAE,GAAG;cACJ,GAAGH,KAAK,CAACH,KAAK,CAACM,EAAE,CAAC;cAClBG,SAAS,EAAE,CAACN,KAAK,CAACH,KAAK,CAACM,EAAE,CAAC,CAACG,SAAS,CAAE;YACzC;UACF;QACF,CAAC;MACH;IACA;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}