{"ast":null,"code":"const initialState = {\n  byIds: {},\n  allIds: [],\n  visibilityFilter: \"SHOW_ALL\"\n};\nconst taskReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_TODO\":\n      {\n        const {\n          id,\n          inputData\n        } = action.payload;\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [id]: {\n              inputData\n            }\n          },\n          allIds: [...state.allIds, id]\n        };\n      }\n    case 'toggleTodo':\n      {\n        const {\n          id\n        } = action.payload;\n        return {\n          ...state,\n          byIds: {\n            ...state.byIds,\n            [id]: {\n              ...state.byIds[id],\n              completed: !state.byIds[id].completed\n            }\n          }\n        };\n      }\n    case 'SET_VISIBILITY_FIlTER':\n      {\n        return {\n          ...state,\n          visibilityFilter: action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default taskReducer;\nexport const getTodosState = store => store.todoes;\nexport const getTodoList = store => getTodosState(store) ? getTodosState(store).allIds : [];\nexport const getTodoById = (store, id) => getTodosState(store) ? {\n  ...getTodosState(store).byIds[id],\n  id\n} : {};\nexport const getTodos = store => getTodoList(store).map(id => getTodoById(store, id));\nexport const getVisibleTodos = (store, visibilityFilter) => {\n  console.log(visibilityFilter);\n  const allTodos = getTodos(store);\n  switch (visibilityFilter) {\n    case \"SHOW_COMPLETED\":\n      return allTodos.filter(todo => todo.completed);\n    case \"SHOW_ACTIVE\":\n      return allTodos.filter(todo => !todo.completed);\n    case \"SHOW_ALL\":\n    default:\n      return allTodos;\n  }\n};","map":{"version":3,"names":["initialState","byIds","allIds","visibilityFilter","taskReducer","state","action","type","id","inputData","payload","completed","getTodosState","store","todoes","getTodoList","getTodoById","getTodos","map","getVisibleTodos","console","log","allTodos","filter","todo"],"sources":["C:/Users/webmob/Documents/WebMobSoft/todo-suing-redux/todo-using-redux/src/redux/reducer.js"],"sourcesContent":["const initialState = {\r\n  byIds: {},\r\n  allIds: [],\r\n  visibilityFilter: \"SHOW_ALL\" \r\n};\r\n\r\nconst taskReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\": {\r\n      const { id, inputData } = action.payload;\r\n      return {\r\n        ...state,\r\n        byIds: {\r\n          ...state.byIds,\r\n          [id]: { inputData },\r\n        },\r\n        allIds: [...state.allIds, id],\r\n      };\r\n    }\r\n\r\n    case 'toggleTodo':{\r\n      const {id} = action.payload;\r\n      return{\r\n        ...state,\r\n        byIds:{\r\n          ...state.byIds,\r\n          [id]:{\r\n            ...state.byIds[id],\r\n            completed:!state.byIds[id].completed\r\n          }\r\n        }\r\n      }\r\n    }\r\n    \r\n    case 'SET_VISIBILITY_FIlTER':{\r\n      return {\r\n        ...state,\r\n        visibilityFilter:action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default taskReducer;\r\nexport const getTodosState = (store) => store.todoes;\r\n\r\nexport const getTodoList = (store) =>\r\n  getTodosState(store) ? getTodosState(store).allIds : [];\r\n\r\nexport const getTodoById = (store, id) =>\r\n  getTodosState(store) ? { ...getTodosState(store).byIds[id], id } : {};\r\n\r\nexport const getTodos = (store) =>\r\n  getTodoList(store).map((id) => getTodoById(store, id));\r\n\r\nexport const getVisibleTodos = (store, visibilityFilter) => {\r\n  console.log(visibilityFilter)\r\n  const allTodos = getTodos(store);\r\n  switch (visibilityFilter) {\r\n    case \"SHOW_COMPLETED\":\r\n      return allTodos.filter((todo) => todo.completed);\r\n    case \"SHOW_ACTIVE\":\r\n      return allTodos.filter((todo) => !todo.completed);\r\n    case \"SHOW_ALL\":\r\n    default:\r\n      return allTodos;\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,KAAK,EAAE,CAAC,CAAC;EACTC,MAAM,EAAE,EAAE;EACVC,gBAAgB,EAAE;AACpB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,UAAU;MAAE;QACf,MAAM;UAAEC,EAAE;UAAEC;QAAU,CAAC,GAAGH,MAAM,CAACI,OAAO;QACxC,OAAO;UACL,GAAGL,KAAK;UACRJ,KAAK,EAAE;YACL,GAAGI,KAAK,CAACJ,KAAK;YACd,CAACO,EAAE,GAAG;cAAEC;YAAU;UACpB,CAAC;UACDP,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAM,EAAEM,EAAE;QAC9B,CAAC;MACH;IAEA,KAAK,YAAY;MAAC;QAChB,MAAM;UAACA;QAAE,CAAC,GAAGF,MAAM,CAACI,OAAO;QAC3B,OAAM;UACJ,GAAGL,KAAK;UACRJ,KAAK,EAAC;YACJ,GAAGI,KAAK,CAACJ,KAAK;YACd,CAACO,EAAE,GAAE;cACH,GAAGH,KAAK,CAACJ,KAAK,CAACO,EAAE,CAAC;cAClBG,SAAS,EAAC,CAACN,KAAK,CAACJ,KAAK,CAACO,EAAE,CAAC,CAACG;YAC7B;UACF;QACF,CAAC;MACH;IAEA,KAAK,uBAAuB;MAAC;QAC3B,OAAO;UACL,GAAGN,KAAK;UACRF,gBAAgB,EAACG,MAAM,CAACI;QAC1B,CAAC;MACH;IACA;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,WAAW;AAC1B,OAAO,MAAMQ,aAAa,GAAIC,KAAK,IAAKA,KAAK,CAACC,MAAM;AAEpD,OAAO,MAAMC,WAAW,GAAIF,KAAK,IAC/BD,aAAa,CAACC,KAAK,CAAC,GAAGD,aAAa,CAACC,KAAK,CAAC,CAACX,MAAM,GAAG,EAAE;AAEzD,OAAO,MAAMc,WAAW,GAAGA,CAACH,KAAK,EAAEL,EAAE,KACnCI,aAAa,CAACC,KAAK,CAAC,GAAG;EAAE,GAAGD,aAAa,CAACC,KAAK,CAAC,CAACZ,KAAK,CAACO,EAAE,CAAC;EAAEA;AAAG,CAAC,GAAG,CAAC,CAAC;AAEvE,OAAO,MAAMS,QAAQ,GAAIJ,KAAK,IAC5BE,WAAW,CAACF,KAAK,CAAC,CAACK,GAAG,CAAEV,EAAE,IAAKQ,WAAW,CAACH,KAAK,EAAEL,EAAE,CAAC,CAAC;AAExD,OAAO,MAAMW,eAAe,GAAGA,CAACN,KAAK,EAAEV,gBAAgB,KAAK;EAC1DiB,OAAO,CAACC,GAAG,CAAClB,gBAAgB,CAAC;EAC7B,MAAMmB,QAAQ,GAAGL,QAAQ,CAACJ,KAAK,CAAC;EAChC,QAAQV,gBAAgB;IACtB,KAAK,gBAAgB;MACnB,OAAOmB,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACb,SAAS,CAAC;IAClD,KAAK,aAAa;MAChB,OAAOW,QAAQ,CAACC,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACb,SAAS,CAAC;IACnD,KAAK,UAAU;IACf;MACE,OAAOW,QAAQ;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}