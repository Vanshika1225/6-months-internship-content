{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\webmob\\\\Documents\\\\WebMobSoft\\\\todo-suing-redux\\\\todo-using-redux\\\\src\\\\Component\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { getTodos } from \"../redux/selectors\"; // You may need to adjust this import if you're not using Redux\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos\n}) => {\n  _s();\n  const [visibilityFilter, setVisibilityFilter] = useState(\"SHOW_ALL\");\n  const filteredTodos = todos.filter(todo => {\n    if (visibilityFilter === \"SHOW_COMPLETED\") {\n      return todo.completed;\n    } else if (visibilityFilter === \"SHOW_ACTIVE\") {\n      return !todo.completed;\n    } else {\n      return true;\n    }\n  });\n  const handleSetVisibilityFilter = filter => {\n    setVisibilityFilter(filter);\n  };\n  const handleToggleTodo = id => {\n    // Your existing toggle todo logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), filteredTodos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleToggleTodo(todo.id),\n      children: todo.completed ? `${todo.inputData}-completed` : `${todo.inputData}-not completed`\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(VisibilityFilter, {\n      visibilityFilter: visibilityFilter,\n      setVisibilityFilter: handleSetVisibilityFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"FnRvXmq62H51yWkphwF7qlo3QPc=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","getTodos","jsxDEV","_jsxDEV","TodoList","todos","_s","visibilityFilter","setVisibilityFilter","filteredTodos","filter","todo","completed","handleSetVisibilityFilter","handleToggleTodo","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","inputData","VisibilityFilter","_c","$RefreshReg$"],"sources":["C:/Users/webmob/Documents/WebMobSoft/todo-suing-redux/todo-using-redux/src/Component/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { getTodos } from \"../redux/selectors\"; // You may need to adjust this import if you're not using Redux\r\n\r\nconst TodoList = ({ todos }) => {\r\n  const [visibilityFilter, setVisibilityFilter] = useState(\"SHOW_ALL\");\r\n\r\n  const filteredTodos = todos.filter(todo => {\r\n    if (visibilityFilter === \"SHOW_COMPLETED\") {\r\n      return todo.completed;\r\n    } else if (visibilityFilter === \"SHOW_ACTIVE\") {\r\n      return !todo.completed;\r\n    } else {\r\n      return true;\r\n    }\r\n  });\r\n\r\n  const handleSetVisibilityFilter = filter => {\r\n    setVisibilityFilter(filter);\r\n  };\r\n\r\n  const handleToggleTodo = (id) => {\r\n    // Your existing toggle todo logic\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      {filteredTodos.map((todo) => (\r\n        <div key={todo.id} onClick={() => handleToggleTodo(todo.id)}>\r\n          {todo.completed\r\n            ? `${todo.inputData}-completed`\r\n            : `${todo.inputData}-not completed`}\r\n        </div>\r\n      ))}\r\n      <VisibilityFilter\r\n        visibilityFilter={visibilityFilter}\r\n        setVisibilityFilter={handleSetVisibilityFilter}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,UAAU,CAAC;EAEpE,MAAMS,aAAa,GAAGJ,KAAK,CAACK,MAAM,CAACC,IAAI,IAAI;IACzC,IAAIJ,gBAAgB,KAAK,gBAAgB,EAAE;MACzC,OAAOI,IAAI,CAACC,SAAS;IACvB,CAAC,MAAM,IAAIL,gBAAgB,KAAK,aAAa,EAAE;MAC7C,OAAO,CAACI,IAAI,CAACC,SAAS;IACxB,CAAC,MAAM;MACL,OAAO,IAAI;IACb;EACF,CAAC,CAAC;EAEF,MAAMC,yBAAyB,GAAGH,MAAM,IAAI;IAC1CF,mBAAmB,CAACE,MAAM,CAAC;EAC7B,CAAC;EAED,MAAMI,gBAAgB,GAAIC,EAAE,IAAK;IAC/B;EAAA,CACD;EAED,oBACEZ,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBX,aAAa,CAACY,GAAG,CAAEV,IAAI,iBACtBR,OAAA;MAAmBmB,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAACH,IAAI,CAACI,EAAE,CAAE;MAAAC,QAAA,EACzDL,IAAI,CAACC,SAAS,GACV,GAAED,IAAI,CAACY,SAAU,YAAW,GAC5B,GAAEZ,IAAI,CAACY,SAAU;IAAe,GAH7BZ,IAAI,CAACI,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACN,CAAC,eACFjB,OAAA,CAACqB,gBAAgB;MACfjB,gBAAgB,EAAEA,gBAAiB;MACnCC,mBAAmB,EAAEK;IAA0B;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACd,EAAA,CArCIF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}